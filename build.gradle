/*
 * Copyright 2018 NEM
 * Copyright 2019 ProximaX
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import io.netifi.flatbuffers.plugin.tasks.FlatBuffers

plugins {
    // main language plugin
    id 'java-library'
    // distribution of library and dependencies
    id 'java-library-distribution'
    // publishing to maven repository
    id 'maven-publish'
    // support for integration tests
    id "org.unbroken-dome.test-sets" version "3.0.1"
    // sign the artifacts and pom
    id 'signing'
    // code coverage reporting
    id 'jacoco'
    // integrate coverage with github
    id 'com.github.kt3k.coveralls' version '2.8.4'
    // generator for the DTOs
    id "org.openapi.generator" version "5.4.0"
    // generate flat buffer files
    id "io.netifi.flatbuffers" version "1.0.7"
}

// define contents of the build
apply from: "$rootDir/gradle/content.gradle"
// load setup for coverage reports
apply from: "$rootDir/gradle/coverage.gradle"
// loak setup for publishing
apply from: "$rootDir/gradle/publishing.gradle"
// load Travis CI specific support
apply from: "$rootDir/gradle/travis.gradle"
// load support for openapi code generator
apply from: "$rootDir/gradle/openapi.gradle"
// load support java
apply plugin: 'java'

// Java 11
sourceCompatibility = 11

// take dependencies from maven central
repositories {
    mavenCentral()
}

// add generated code to the man sources et
sourceSets {
    main {
    	java {
    		srcDirs += [ 'src/gen/java' ]
    	}
    }
}

// testing details
test {
    // use JUnit5
    useJUnitPlatform()
}

// declare e2e test set
testSets {
    e2e
}

// versions of dependencies
ext {
    okHttp3Version = '4.9.3'
    junitVersion = '5.6.0'
    swagger_annotations_version = '1.6.5'
    jackson_version = '2.13.2'
    jackson_databind_version = '2.13.2'
    jackson_databind_nullable_version = "0.2.2"
    jakarta_annotation_version = '2.0.0'
    spring_web_version = '5.3.16'
    jodatime_version = "2.9.9"
    junit_version = "4.13.1"
}

dependencies {
    // ReactiveX async processing
    api 'io.reactivex.rxjava3:rxjava:3.1.3'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.21'

    // backport of java.time to support old android devices - removed from dependencies to avoid classpath polution
	compileOnly 'org.threeten:threetenbp:1.5.1'

	// crypto utilities, Hex
    implementation('com.madgag.spongycastle:prov:1.58.0.0') {
    	// exclude junit as transitive dependency...
    	exclude group: 'junit'
    }
    // validations
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'org.apache.commons:commons-math3:3.6.1'
    // sparse bitmap implementation
    implementation 'com.googlecode.javaewah:JavaEWAH:1.1.13'
    // serialization of transactions for server
    implementation 'com.google.flatbuffers:flatbuffers-java:1.12.0'
	// dependencies of DTO code generated by swagger    
    implementation 'com.google.code.gson:gson:2.9.0'
	implementation 'io.gsonfire:gson-fire:1.8.5'
    implementation group: 'io.swagger.core.v3', name: 'swagger-annotations', version: '2.1.12'
    implementation "com.squareup.okhttp3:okhttp:${okHttp3Version}"
	implementation "com.squareup.okhttp3:logging-interceptor:${okHttp3Version}"
    implementation group: 'io.nem', name: 'symbol-openapi-okhttp-gson-client', version: '1.0.3'
    implementation group: 'jakarta.annotation', name: 'jakarta.annotation-api', version: '2.0.0'
    implementation group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.2'
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'
    implementation group: 'org.openapitools', name: 'jackson-databind-nullable', version: '0.2.2'
    implementation group: 'com.squareup.retrofit2', name: 'retrofit', version: '2.9.0'
    implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.13.2'

    // spring
    implementation "io.swagger:swagger-annotations:$swagger_annotations_version"
    implementation "com.google.code.findbugs:jsr305:3.0.2"
    implementation "org.springframework:spring-web:$spring_web_version"
    implementation "org.springframework:spring-context:$spring_web_version"
    implementation "com.fasterxml.jackson.core:jackson-core:$jackson_version"
    implementation "com.fasterxml.jackson.core:jackson-annotations:$jackson_version"
    implementation "com.fasterxml.jackson.core:jackson-databind:$jackson_databind_version"
    implementation "com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:$jackson_version"
    implementation "org.openapitools:jackson-databind-nullable:$jackson_databind_nullable_version"
    implementation "jakarta.annotation:jakarta.annotation-api:$jakarta_annotation_version"
    implementation group: 'com.squareup.okio', name: 'okio', version: '1.0.0'
    implementation group: 'javax.ws.rs', name: 'javax.ws.rs-api', version: '2.1.1'
    implementation "com.google.code.findbugs:jsr305:3.0.2"
    implementation 'org.glassfish.jersey.core:jersey-client:3.0.4'
    implementation 'org.glassfish.jersey.inject:jersey-hk2:3.0.4'
    implementation 'org.glassfish.jersey.media:jersey-media-multipart:3.0.4'
    implementation 'org.glassfish.jersey.media:jersey-media-json-jackson:3.0.4'
    implementation 'org.glassfish.jersey.connectors:jersey-apache-connector:3.0.4'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.13.2'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.13.2'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.2'
    implementation "org.openapitools:jackson-databind-nullable:0.2.2"
    implementation "com.brsanthu:migbase64:2.2"
    implementation 'jakarta.annotation:jakarta.annotation-api:2.0.0'
    testImplementation "junit:junit:4.13.2"

	// file utils
	testImplementation 'commons-io:commons-io:2.11.0'
    // backport of java.time to support old android devices
	testImplementation 'org.threeten:threetenbp:1.5.1'
	
    testImplementation 'org.hamcrest:hamcrest-core:1.3'
    testImplementation 'org.hamcrest:hamcrest-library:1.3'
    testImplementation 'org.mockito:mockito-all:1.9.5'
    testImplementation 'com.googlecode.matrix-toolkits-java:mtj:1.0.1'
	
    // Logging facade
	testImplementation 'org.slf4j:slf4j-api:1.7.26'
	// log implementation
	testRuntimeOnly 'ch.qos.logback:logback-classic:1.2.3'
	
    // Tests
    testImplementation 'org.apiguardian:apiguardian-api:1.0.0'
    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-params:${junitVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
}

task flatBuffersGenerate(type: FlatBuffers) {
    inputDir = file("schemas/flatbuffers")
    outputDir = file("src/gen/java")
    language = 'java'
    extraArgs = '--no-warnings'
}

compileJava.dependsOn tasks.flatBuffersGenerate
compileJava.dependsOn tasks.openApiGenerate
compileJava.dependsOn tasks.removeMetafiles