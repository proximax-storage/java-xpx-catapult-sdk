/*
 * Catapult REST API Reference
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.7.15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.proximax.sdk.gen.model;

import java.io.IOException;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * The entity type: * 0x4158 (16728 decimal) - Blockchain Upgrade Transaction. * 0x4159 (16729 decimal) - Network Config Transaction. * 0x413D (16701 decimal) - Address Metadata Transaction. * 0x423D (16957 decimal) - Mosaic Metadata Transaction. * 0x433D (17213 decimal) - Namespace Metadata Transaction. * 0x414D (16717 decimal) - Mosaic Definition Transaction. * 0x424D (16973 decimal) - Mosaic Supply Change Transaction. * 0x414E (16718 decimal) - Register Namespace Transaction. * 0x424E (16974 decimal) - Address Alias Transaction. * 0x434E (17230 decimal) - Mosaic Alias Transaction. * 0x4154 (16724 decimal) - Transfer Transaction. * 0x4155 (16725 decimal) - Modify Multisig Account Transaction. * 0x4141 (16705 decimal) - Aggregate Complete Transaction. * 0x4241 (16961 decimal) - Aggregate Bonded Transaction. * 0x4148 (16712 decimal) - Hash Lock Transaction. * 0x4150 (16720 decimal) - Account Properties Address Transaction. * 0x4250 (16976 decimal) - Account Properties Mosaic Transaction. * 0x4350 (17232 decimal) - Account Properties Entity Type Transaction. * 0x4152 (16722 decimal) - Secret Lock Transaction. * 0x4252 (16978 decimal) - Secret Proof Transaction. * 0x414C (16716 decimal) - Account Link Transaction. * 0x8043 (32835 decimal) - Nemesis block. * 0x8143 (33091 decimal) - Regular block. 
 */
@JsonAdapter(EntityTypeEnum.Adapter.class)
public enum EntityTypeEnum {
  
  NUMBER_16728(16728),
  
  NUMBER_16729(16729),
  
  NUMBER_16701(16701),
  
  NUMBER_16957(16957),
  
  NUMBER_17213(17213),
  
  NUMBER_16717(16717),
  
  NUMBER_16973(16973),
  
  NUMBER_16718(16718),
  
  NUMBER_16974(16974),
  
  NUMBER_17230(17230),
  
  NUMBER_16724(16724),
  
  NUMBER_16725(16725),
  
  NUMBER_16705(16705),
  
  NUMBER_16961(16961),
  
  NUMBER_16712(16712),
  
  NUMBER_16720(16720),
  
  NUMBER_16976(16976),
  
  NUMBER_17232(17232),
  
  NUMBER_16722(16722),
  
  NUMBER_16978(16978),
  
  NUMBER_16716(16716),
  
  NUMBER_32835(32835),
  
  NUMBER_33091(33091);

  private Integer value;

  EntityTypeEnum(Integer value) {
    this.value = value;
  }

  public Integer getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static EntityTypeEnum fromValue(Integer value) {
    for (EntityTypeEnum b : EntityTypeEnum.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<EntityTypeEnum> {
    @Override
    public void write(final JsonWriter jsonWriter, final EntityTypeEnum enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public EntityTypeEnum read(final JsonReader jsonReader) throws IOException {
      Integer value = jsonReader.nextInt();
      return EntityTypeEnum.fromValue(value);
    }
  }
}

